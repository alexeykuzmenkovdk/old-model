import { type NextRequest, NextResponse } from "next/server"

export async function POST(request: NextRequest) {
  try {
    const body = await request.json()
    console.log("[API] –ü–æ–ª—É—á–µ–Ω–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ —É—Å–ª—É–≥–∏ –±–∞–µ—Ä–∞:", body)

    const { orderNumber, name, contact, contactMethod, telegramUsername, message, productLink, type } = body

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    const botToken = process.env.TELEGRAM_BOT_TOKEN
    const chatId = process.env.TELEGRAM_CHAT_ID

    if (!botToken || !chatId) {
      console.log("[API] –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã, —Ä–∞–±–æ—Ç–∞–µ–º –≤ –¥–µ–º–æ-—Ä–µ–∂–∏–º–µ")
      return NextResponse.json({
        success: true,
        demo: true,
        message: "–î–µ–º–æ-—Ä–µ–∂–∏–º: Telegram –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω",
      })
    }

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è Telegram
    const contactMethodText =
      {
        telegram: "Telegram",
        whatsapp: "WhatsApp",
        email: "Email",
      }[contactMethod] || contactMethod

    const telegramMessage = `üõí –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ —É—Å–ª—É–≥–∏ –±–∞–µ—Ä–∞!

üìã –ù–æ–º–µ—Ä –∑–∞—è–≤–∫–∏: ${orderNumber}
üë§ –ò–º—è –∫–ª–∏–µ–Ω—Ç–∞: ${name}
üìû –ö–æ–Ω—Ç–∞–∫—Ç: ${contact} (${contactMethodText})${telegramUsername ? `\nüí¨ –ù–∏–∫ –≤ Telegram: ${telegramUsername}` : ""}${productLink ? `\nüîó –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä: ${productLink}` : ""}
üìù –û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞: ${message}

üïê –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è: ${new Date().toLocaleString("ru-RU", {
      timeZone: "Europe/Moscow",
    })}`

    console.log("[API] –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram:", telegramMessage)

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
    const telegramResponse = await fetch(`https://api.telegram.org/bot${botToken}/sendMessage`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        chat_id: chatId,
        text: telegramMessage,
        parse_mode: "HTML",
      }),
    })

    const telegramResult = await telegramResponse.json()
    console.log("[API] –û—Ç–≤–µ—Ç –æ—Ç Telegram:", telegramResult)

    if (!telegramResponse.ok) {
      throw new Error(`–û—à–∏–±–∫–∞ Telegram API: ${telegramResult.description || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞"}`)
    }

    return NextResponse.json({
      success: true,
      orderNumber,
      message: "–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞",
    })
  } catch (error) {
    console.error("[API] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏:", error)
    return NextResponse.json(
      {
        success: false,
        error: error instanceof Error ? error.message : "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞",
      },
      { status: 500 },
    )
  }
}
